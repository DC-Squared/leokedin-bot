name: Deploy

on:
  push:
    branches:
      - master

jobs:
  build-and-deploy:

    runs-on: ubuntu-latest

    steps:
      - name: Check out repository code
        uses: actions/checkout@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: sa-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: leokedin-bot
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:leokedin_bot_$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:leokedin_bot_$IMAGE_TAG
          docker tag $ECR_REGISTRY/$ECR_REPOSITORY:leokedin_bot_$IMAGE_TAG $ECR_REGISTRY/$ECR_REPOSITORY:leokedin_bot_latest
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:leokedin_bot_latest
          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:leokedin_bot_$IMAGE_TAG"

      - name: Download task definition
        run: |
          aws ecs describe-task-definition --task-definition leokedin-bot --query taskDefinition > task-definition.json

      - name: Fill in the new image ID in the Amazon ECS task definition
        id: render-main-container
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: task-definition.json
          container-name: leokedin-bot
          image: ${{ steps.build-image.outputs.image }}

      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.render-main-container.outputs.task-definition }}
          service: leokedin-bot
          cluster: leokedin-bot
          wait-for-service-stability: true